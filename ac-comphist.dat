((("untrace" .
   [1 0 0 0 0 0 0])
  ("tree1" .
   [2 0 0 0 0])
  ("defprop" .
   [0 0 0 0 0 1 0])
  ("meth" .
   [1 0 0 0])
  ("run-methods" .
   [0 0 0 0 0 0 1 0 0 0 0])
  ("rget" .
   [3 0 0 0])
  ("meth?" .
   [0 0 0 0 2])
  ("prop" .
   [5 0 0 0])
  ("precedence" .
   [0 0 0 0 0 0 1 0 0 0])
  (":preclist" .
   [0 0 0 0 0 1 2 3 0])
  ("*objs*" .
   [0 0 0 0 2 0])
  ("make-precedence" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0])
  (":parent" .
   [0 0 0 0 0 0 1])
  ("prog1" .
   [2 0 0 0 0])
  ("parents" .
   [1 0 0 2 1 0 0])
  ("gen-site" .
   [1 0 0 0 0 0 0 0])
  ("item-title" .
   [1 0 0 0 0 0 0 0 1 0])
  ("string-lessp" .
   [0 0 0 0 0 0 0 0 0 0 0 1])
  ("title<" .
   [1 0 0 0 0 0])
  ("merge" .
   [1 0 0 0 0])
  ("all-items" .
   [1 0 0 0 0 0 0 0 0])
  ("string-capitalize" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0])
  ("index" .
   [4 0 0 0 0])
  ("link-item" .
   [0 0 0 0 0 0 0 3 0])
  ("contents" .
   [1 0 0 0 0 1 0 0])
  ("page" .
   [2 0 0 0])
  ("sections" .
   [6 0 0 0 0 0 0 0])
  ("*sections*" .
   [0 0 0 1 2 0 0 0 0 0])
  (":text" .
   [1 0 0 0 0])
  ("items" .
   [1 0 0 0 0])
  (":id" .
   [2 0 0])
  ("identity" .
   [0 0 5 0 0 0 0 0])
  ("map3" .
   [2 0 0 0])
  ("with-answer" .
   [0 0 0 0 0 0 0 0 1 0 0])
  ("query" .
   [1 0 0 1 0])
  ("prove-not" .
   [1 0 0 0 0 0 0 0 0])
  ("prove-or" .
   [1 0 0 0 0 0 0 0])
  ("clauses" .
   [0 0 0 0 1 3 3])
  ("prove-and" .
   [2 0 0 0 0 0 0 0 0])
  (":?2" .
   [1 0 0])
  ("?b" .
   [1 0])
  ("job" .
   [1 0 0])
  ("nancy" .
   [1 0 0 0 0])
  ("mapcan" .
   [5 0 0 0 0 0])
  ("parent" .
   [7 0 0 0 1 0])
  ("<-" .
   [4 0])
  ("*rules*" .
   [0 0 0 7 2 0 0])
  ("ant" .
   [1 0 0])
  ("b2" .
   [5 0])
  ("consp" .
   [2 0 0 0 0])
  ("binds" .
   [34 0 0 0 0])
  ("binding" .
   [2 0 0 0 0 1 1])
  ("var?" .
   [6 0 0 0])
  ("?x" .
   [8 0])
  ("?y" .
   [7 0])
  ("assoc" .
   [4 0 0 0 0])
  ("symbolp" .
   [2 0 0 0 0 0 0])
  ("match" .
   [10 0 0 0 0])
  ("d" .
   [1])
  ("dl-remove" .
   [0 0 0 0 0 1 0 0 0])
  ("dl-next" .
   [6 0 0 0 0 0 0])
  ("dl-list" .
   [1 0 0 0 0 0 0])
  (":initial-value" .
   [0 0 0 0 0 0 0 0 0 0 0 1 0 0])
  (":from-end" .
   [0 0 0 0 0 0 0 0 1])
  ("dl-insert" .
   [0 0 0 0 0 1 0 1 0])
  ("reduce" .
   [1 0 0 0 0 0])
  ("dl" .
   [4 0])
  ("dl-prev" .
   [8 0 0 0 0 0 0])
  ("prev" .
   [2 0 0 0])
  ("dl-p" .
   [1 0 0 0])
  (":next" .
   [1 0 0 0 0])
  (":data" .
   [1 0 0 0 0])
  ("dl->list" .
   [1 0 0 0 0 0 1 0])
  ("print-dl" .
   [1 0 0 0 0 0 0 0])
  (":print-function" .
   [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0])
  ("state" .
   [1 0 0 0 1])
  ("CTR" .
   [0 0 1])
  ("top" .
   [1 0 0])
  ("topping" .
   [2 0 0 0 0 0 0])
  ("ice-cream" .
   [0 0 0 0 1 0 0 1 0])
  ("stuff" .
   [2 0 0 0 0])
  ("combine" .
   [3 0 0 0 0 0 0])
  ("screen-circle" .
   [0 0 0 0 0 1 0 0 0 0 0 0 0])
  ("graphic-color" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0])
  ("pprint" .
   [1 0 0 0 0 0])
  (":eof" .
   [4 0 0 0])
  ("read-char" .
   [1 0 0 0 0 0 0 0 1])
  ("reset1" .
   [1 0 0 0 0 0])
  ("stamp" .
   [4 0 0 0 0])
  ("counter" .
   [4 0 0 0 0 0 1])
  ("reset" .
   [2 0 0 0 0])
  ("writers" .
   [1 0 0 0 0 0 0])
  ("equalp" .
   [0 0 0 0 0 1])
  ("maphash" .
   [1 0 0 0 0 0 0])
  ("apricot" .
   [0 0 0 1 1 0 0])
  ("GETHASH" .
   [0 0 0 0 0 0 1])
  ("fruit" .
   [1 0 1 1 0])
  ("bugs" .
   [1 0 0 0])
  ("push" .
   [5 0 0 0])
  ("color" .
   [2 0 0 0 0])
  ("ht" .
   [5 0])
  ("make-hash-table" .
   [1 0 0 0 0 0 0 0 2 3 0 0 2 0 0])
  ("not-nullable" .
   [0 0 0 0 0 0 0 0 0 1 0 0])
  (":value-normalizer" .
   [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0])
  (":default-value" .
   [0 0 0 0 0 0 0 0 0 0 0 1 0 0])
  (":equality_predicate" .
   [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("make-column" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("ignore" .
   [2 0 0 0 0 0])
  ("column" .
   [1 0 0 0 2 2])
  ("value-normalizer" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0])
  ("default-value" .
   [0 0 0 0 0 0 1 1 0 0 2 0 0])
  (":comparator" .
   [1 0 0 0 0 0 0 0 1 0 0])
  ("comparator" .
   [1 0 0 0 0 0 0 0 0 0])
  (":equal-table" .
   [0 0 0 0 0 0 0 1 0 0 0 0])
  ("equality-predicate" .
   [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("&optional" .
   [0 0 0 10 2 0 1 0 1])
  ("make-rows" .
   [1 0 0 0 0 0 0 0 0])
  ("*default-pathname-defaults*" .
   [0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":com.gigamonkeys.mp3-database" .
   [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("acl-compat" .
   [0 0 0 0 0 0 0 1 0 0])
  ("portableaserve-20150923-git" .
   [0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("write-byte" .
   [0 0 0 0 0 0 0 0 2 0])
  ("downfrom" .
   [0 0 0 0 0 1 0 0])
  (":write" .
   [0 0 0 0 0 1])
  ("read-byte" .
   [0 0 0 0 0 0 0 3 0])
  ("low-bit" .
   [3 0 0 0 0 0 0])
  ("byte" .
   [2 0 0 0])
  ("ldb" .
   [2 0 0])
  ("to" .
   [2 0])
  ("bytes" .
   [1 0 0 0 1])
  ("define-binary-type" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":size" .
   [2 0 0 0 0])
  (":export" .
   [0 0 0 0 0 2 0])
  (":com.gigamonkeys.id3v2" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0])
  (":com.gigamonkeys.binary-data" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0])
  ("*total-spams*" .
   [0 0 0 0 0 0 0 0 0 0 1 0 0])
  ("*total-hams*" .
   [0 0 0 0 1 0 0 0 0 0 0 0])
  ("increment-total-count" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0])
  ("spam" .
   [2 0 0 0])
  ("ham" .
   [3 0 0])
  ("ecase" .
   [1 0 0 1 0])
  ("increment-count" .
   [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0])
  ("feature" .
   [2 0 0 1 3 0 0])
  ("type" .
   [21 0 0 2])
  ("spam-count" .
   [0 0 0 0 0 1 2 0 0 0])
  ("ham-count" .
   [1 0 0 0 0 0 1 0 0])
  ("word" .
   [2 0 0 0])
  ("print-unreadable-object" .
   [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("word-feature" .
   [0 0 0 0 0 0 0 0 0 1 0 0])
  ("*feature-database*" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0])
  ("baz" .
   [3 0 0])
  ("bar" .
   [8 0 0])
  ("intern-feature" .
   [0 0 0 0 0 0 0 0 0 0 1 0 0 0])
  ("extract-features" .
   [1 0 0 0 0 0 0 0 0 0 0 3 1 0 0 0])
  ("extract-words" .
   [0 0 0 0 0 3 0 0 0 0 1 0 0])
  (":test" .
   [3 0 0 0 0])
  ("cl-ppcre:all-matches-as-strings" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("delete-duplicates" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0])
  ("text" .
   [13 0 0 1])
  (":com.gigamonkeys.spam" .
   [0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0])
  ("in-package" .
   [0 0 0 0 0 5 1 0 0 0])
  ("quicklisp:quickload" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0])
  (":common-lisp" .
   [0 0 0 0 0 0 0 0 0 0 2 1])
  (":use" .
   [5 0 0 0])
  (":com.gigamonkeys.pathnames" .
   [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 2 0 0 0 0 0 0])
  ("defpackage" .
   [0 0 0 0 0 0 0 0 4 0])
  ("~:c" .
   [1 0 0])
  ("pi" .
   [2 0])
  ("PI" .
   [2 0])
  (":class" .
   [0 0 0 0 0 1])
  (":allocation" .
   [0 0 0 0 0 0 0 0 0 1 0])
  (":the" .
   [1 0 0 0])
  (":b" .
   [1 0])
  ("balance2" .
   [2 0 0 0 0 0 0 0])
  ("balance1" .
   [0 0 0 0 0 1 0 0])
  ("account2" .
   [1 0 0 0 0 0 0 0])
  ("account1" .
   [1 0 0 0 0 0 0 0])
  ("with-accessors" .
   [0 0 0 0 0 0 0 0 1 1 0 0 0 0])
  ("decf" .
   [1 0 0 0])
  ("with-slots" .
   [1 0 0 0 0 0 0 2 2 0])
  ("d:/" .
   [3 0 0])
  (":default" .
   [0 0 0 0 0 0 1 0])
  ("d:/H2" .
   [1 0 0 0 0])
  ("d:/idea.log" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("fn" .
   [1 0])
  ("walk" .
   [2 0 0 1])
  ("list-directory" .
   [0 0 0 0 0 0 0 0 0 3 0 0 0 0])
  ("dolist" .
   [6 0 0 0 2 4])
  ("directories" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("constantly" .
   [1 0 0 0 0 0 0 0 0 0])
  ("&key" .
   [10 0 0 0])
  ("directory-wildcard" .
   [0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 0])
  ("dirname" .
   [4 0 0 1 0 1 0])
  ("pathname-as-directory" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0])
  (":wild" .
   [6 0 0 0 0])
  (":unspecific" .
   [0 0 0 0 0 0 1 0 0 0 0])
  ("*features*" .
   [0 0 0 0 2 0 0 0 0 0])
  (":defaults" .
   [3 0 0 0 0 0 1 0 0])
  (":type" .
   [5 0 0 1 0])
  (":name" .
   [10 0 0 0 0])
  ("file-namestring" .
   [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0])
  (":relative" .
   [0 0 0 0 0 0 0 0 1])
  ("pathname-directory" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0])
  ("or" .
   [9 0])
  (":directory" .
   [1 0 0 0 0 0 0 0 0 0])
  ("make-pathname" .
   [3 0 0 0 0 0 0 0 0 1 1 1 0])
  ("directory-pathname-p" .
   [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0])
  ("error" .
   [6 0 0 1 0])
  ("wild-pathname-p" .
   [1 0 0 0 0 0 0 3 0 0 0 0 0 0 0])
  ("pathname" .
   [1 0 0 1 3 3 3 2])
  ("pathname-type" .
   [0 0 0 0 0 0 0 0 0 0 0 1 0])
  ("pathname-name" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("component-present-p" .
   [0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0])
  (":unspecifi" .
   [0 0 0 0 0 0 0 0 1 0])
  (":if-does-not-exist" .
   [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0])
  ("close" .
   [3 0 0 0 0])
  ("read-line" .
   [2 0 0 0 0 0 0 0 0])
  ("open" .
   [3 0 0 0])
  ("get" .
   [2 0 0])
  (":a" .
   [4 0])
  ("*plist*" .
   [0 0 0 1 3 0 0])
  ("getf" .
   [1 0 0 0])
  ("process-properties" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0])
  ("cddr" .
   [1 0 0 0])
  ("get-properties" .
   [0 0 0 0 0 0 0 2 0 0 0 0 0 0])
  ("plist" .
   [2 0 0 1 0])
  ("keys" .
   [2 0 0 0])
  ("test-+" .
   [8 0 0 5 0 0])
  ("expt" .
   [1 0 0 4])
  ("from" .
   [2 0 0 0])
  ("*x*" .
   [2 0 0])
  ("*test*" .
   [1 0 0 0 0 2])
  ("*gap*" .
   [1 0 0 0 0])
  ("*count1*" .
   [1 0 0 0 0 0 0 0])
  ("defvar" .
   [11 0 0 0 0 0])
  ("*count*" .
   [4 0 0 0 0 0 0])
  ("*fn*" .
   [1 0 0 0])
  ("1+" .
   [7 0])
  ("foo" .
   [22 0 0])
  ("select" .
   [1 0 0 0 0 0])
  ("ADD-CDS" .
   [0 0 0 0 0 0 1])
  ("*db*" .
   [3 0 0 0])
  ("test.db" .
   [1 0 0 0 0 0 0])
  ("Break" .
   [5 0 0 0 0])
  (":ripped" .
   [0 0 0 0 0 2 0])
  ("Give" .
   [6 0 0 0])
  (":title" .
   [4 0 0 0 0 0])
  ("where" .
   [1 0 0 0 0])
  ("alert" .
   [0 0 1 0 0])
  ("**" .
   [2 0])
  ("coerce" .
   [0 0 0 1 0 0])
  ("largest-cluster-size" .
   [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("dod-request-handler3" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0])
  ("check-pos" .
   [1 0 0 0 0 0 1 0 0])
  ("check-neighbors" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("visited" .
   [0 0 0 3 1 0 0])
  ("member" .
   [1 0 0 0 1 0])
  ("roll-against" .
   [0 0 0 0 0 0 0 0 1 0 0 0])
  ("dst-dice" .
   [0 0 0 0 1 0 0 0])
  ("src-dice" .
   [0 0 0 0 0 0 0 1])
  ("roll-dice" .
   [2 0 0 0 0 0 0 0 0])
  ("legal-tiles" .
   [0 0 0 0 0 1 0 0 0 0 0])
  ("e:/program/lisp/land/svg.lisp" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0])
  ("seleted-tile" .
   [0 0 0 0 1 0 0 0 0 0 0 0])
  ("e:/program/lisp/land/DiceDoomUI.lisp" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0])
  ("*board-width*" .
   [0 0 0 0 0 0 0 0 0 0 1 0 0])
  ("*standard-output*" .
   [0 0 0 0 1 1 5 1 0 0 0 0 0 0 0 0 0])
  ("*oldoutput*" .
   [0 0 0 0 4 0 0 0 0 0 0])
  ("*html*" .
   [0 0 3 7 0 0])
  ("*" .
   [3])
  ("g" .
   [1])
  ("center" .
   [2 0 0 0 0 0])
  ("header" .
   [0 0 0 0 1 0])
  ("e:/program/lisp/webtest/myweb.lisp" .
   [0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("dod-request-handler" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1])
  ("hunchentoot:content-type*" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0])
  (":uri" .
   [1 0 0 0])
  ("hunchentoot:define-easy-handler" .
   [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":port" .
   [1 0 0 0 0])
  ("hunchentoot:acceptor" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0])
  ("make-instance" .
   [0 0 0 0 0 0 0 0 15 0 1 0 0])
  ("hunchentoot:start" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0])
  ("asdf:load-system" .
   [0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0])
  ("stream" .
   [6 0 0 0 5 2])
  ("MYSERVER::PATH" .
   [0 0 0 0 0 0 0 0 0 0 0 1 0 0])
  ("svg" .
   [1 0 0])
  ("gen-board" .
   [0 0 0 0 0 1 1 0 0])
  ("y" .
   [1])
  ("col" .
   [1 0 0])
  ("n" .
   [2])
  ("(_InputIterator __first, _InputIterator __last, _Function __f)" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("next" .
   [2 0 0 0])
  ("(_BidirectionalIterator __first, _BidirectionalIterator __last)" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2])
  ("reverse" .
   [2 0 0 1 0 0 1])
  ("(_ForwardIterator __first, _ForwardIterator __middle, _ForwardIterator __last)" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("rotate" .
   [0 0 0 0 1 0])
  ("temp" .
   [2 0 0 0])
  ("j" .
   [11])
  ("i" .
   [23])
  ("ii" .
   [6 0])
  ("while" .
   [0 0 0 3 0])
  ("fi" .
   [1 0])
  ("iv" .
   [1 0])
  ("using" .
   [0 0 1 1 0])
  ("find_end" .
   [1 0 0 0 0 0 0 0])
  ("find_if" .
   [1 0 0 0 0 0 0])
  ("find" .
   [9 0 1 1])
  ("less" .
   [1 0 0 0])
  ("(const _Operation &__fn, const _Tp &__x)" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("bind2nd" .
   [1 0 0 0 1 0 0])
  ("count_if" .
   [1 0 0 0 0 0 0 0])
  ("count" .
   [6 0 0 0 0])
  ("equal_to" .
   [1 0 0 0 0 0 0 0])
  ("(_ForwardIterator __first, _ForwardIterator __last)" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("adjacent_find" .
   [0 0 0 0 0 1 0 0 0 0 0 0 1])
  ("even_by_two" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("_x" .
   [2 0])
  ("static" .
   [0 0 0 0 1 0])
  ("private" .
   [0 0 0 0 0 1 0])
  ("public" .
   [0 0 0 0 1 0])
  ("true" .
   [0 0 0 1])
  ("T" .
   [2])
  ("std" .
   [1 0 0])
  ("namespace" .
   [0 0 0 0 0 0 0 0 1])
  ("iostream" .
   [1 0 0 0 0 0 2 0])
  ("algorithm" .
   [0 0 0 0 0 0 1 0 1])
  ("greater" .
   [0 0 0 0 0 0 2])
  ("stra2" .
   [3 0 0 0 0])
  ("stra1" .
   [2 0 0 0 0])
  ("(_IIter1, _IIter1, _IIter2, _IIter2)" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("lexicographical_compare" .
   [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("display" .
   [0 0 0 0 1 1 1])
  ("for_each" .
   [0 0 0 0 1 0 0 1])
  ("swap" .
   [1 0 0 0])
  ("include" .
   [0 0 0 0 0 1 0])
  ("(const char *)" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("atol" .
   [0 0 1 0])
  ("Files" .
   [1 0 0 0 0])
  ("else" .
   [1 0 0 0])
  ("whenReady" .
   [0 0 0 0 0 1 0 0 0])
  ("window" .
   [0 0 0 1 0 0])
  ("attachEvent" .
   [0 0 0 2 0 0 0 0 0 0 0])
  ("false" .
   [0 0 0 2 1])
  ("addEventListener" .
   [0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0])
  ("funcs" .
   [1 0 0 1 0])
  ("document" .
   [3 0 0 0 3 0 0 0])
  ("handler" .
   [0 0 0 2 3 0 0])
  ("ready" .
   [2 0 0 1 0])
  ("sdfsdf" .
   [3 0 0 0 0 0])
  ("printf" .
   [0 0 0 1 0 0])
  ("at" .
   [1 0])
  ("sort" .
   [1 0 0 0])
  ("vector" .
   [4 0 3 7 3 5])
  ("t" .
   [7])
  ("(const value_type &__x)" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("push_back" .
   [0 0 0 0 0 0 0 1 0])
  ("stringBuilder" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0])
  ("test" .
   [23 0 4 1])
  ("o" .
   [1])
  ("out" .
   [9 0 0])
  ("System" .
   [3 0 1 2 0 0])
  ("fib" .
   [2 0 0])
  ("SLIME" .
   [0 0 0 0 1])
  ("SWANK/BACKEND:DISASSEMBLE-FRAME" .
   [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("hello" .
   [2 0 0 0 0])
  ("sb-ext:compiler-note" .
   [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0])
  ("declare" .
   [4 0 0 0 0 0 0])
  ("sb-ext:muffle-conditions" .
   [0 0 0 1 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1])
  ("*foobyte*" .
   [0 0 0 0 0 0 1 0 1])
  ("SCORE-BOARD" .
   [0 0 0 0 0 0 0 0 0 1 0])
  ("*TEST*" .
   [0 0 2 6 1 0])
  ("take-all" .
   [2 0 0 0 0 0 0 0])
  ("take" .
   [3 0 0 0])
  ("lazy-null" .
   [9 0 0 0 0 0 0 0 0])
  ("unless" .
   [10 0 0 0 0 0])
  ("make-lazy" .
   [4 0 0 0 0 0 1 1 0])
  ("lazy-cdr" .
   [10 0 0 0 0 0 0 0])
  ("*integers*" .
   [0 0 0 0 3 1 0 0 0 3])
  ("lazy-car" .
   [11 0 0 0 0 0 0 0])
  ("lazy-cons" .
   [2 0 0 0 0 0 0 0 0])
  ("defparameter" .
   [0 0 0 0 1 1 3 17 0 0 1 0])
  ("*foo*" .
   [2 0 0 0 0])
  ("*foo2*" .
   [0 0 0 0 0 1])
  ("*FOO1*" .
   [0 0 0 0 0 1])
  ("DEFPARAMETER" .
   [0 0 0 0 0 0 2 2 0 0 0 0])
  ("*FOO*" .
   [0 0 1 2 1])
  ("lazy-value" .
   [0 0 0 0 0 0 1 0 0 0])
  ("force" .
   [6 0 0 1 0])
  ("value" .
   [14 0 0 0 1])
  ("forced" .
   [3 0 0 0 0 0])
  ("gensym" .
   [7 0 0 0 1 1])
  ("lazy" .
   [10 0 0 0])
  ("pushnew" .
   [1 0 0 0 0 0 0])
  ("@body" .
   [2 0 0 0 0])
  ("subj" .
   [1 0 0 0])
  ("place" .
   [0 0 0 1 0])
  ("command" .
   [3 0 0 0 0 0 0])
  ("body" .
   [7 0 0 2])
  ("&body" .
   [9 0 0 0 0])
  ("obj" .
   [37 0 0])
  ("that." .
   [2 0 0 0 0])
  ("like" .
   [2 0 0 0])
  ("dunk" .
   [2 0 0 0])
  ("cannot" .
   [1 0 0 0 0 0])
  ("you" .
   [1 0 0])
  ("of" .
   [2 0])
  ("now" .
   [1 0 0])
  ("is" .
   [1 0])
  ("the" .
   [2 0 0])
  ("*bucket-filled*" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0])
  ("*chain-welded*" .
   [0 0 0 0 0 1 0 0 0 0 0 0 0 0])
  ("have" .
   [2 0 0 0])
  ("bucket" .
   [1 0 0 0 0 2])
  ("garden" .
   [0 0 0 0 0 1])
  ("*location*" .
   [0 0 0 0 1 1 0 0 0 0])
  ("object" .
   [7 1 0 1 1 0])
  ("subject" .
   [2 0 0 0 1 2 0])
  ("setf" .
   [76 0 1 0])
  ("BUCKET" .
   [0 0 0 1 0 0])
  ("chain" .
   [1 0 0 0 0])
  ("GAME-REPL" .
   [0 0 0 0 0 0 0 0 1])
  ("*allowed-commands*" .
   [0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("weld" .
   [2 0 0 1])
  ("let1" .
   [2 0 0 0])
  ("let3" .
   [1 0 0 0])
  ("macroexpand" .
   [0 0 0 0 0 1 0 0 0 0 2])
  ("no" .
   [4 0])
  ("progn" .
   [11 0 0 0 1])
  ("head" .
   [4 0 0 0])
  ("my-length" .
   [0 0 1 0 0 0 0 0 0])
  ("acc" .
   [2 0 0])
  ("tail" .
   [5 0 0 0])
  ("split" .
   [6 0 0 0 0])
  ("yes" .
   [9 0 0])
  ("val" .
   [16 0 0])
  ("defmacro" .
   [9 0 0 0 0 0 21 1])
  ("GAME-TREE" .
   [0 0 0 1 0 0 0 2 0])
  ("PLAY-VS-HUMAN" .
   [0 0 0 0 0 0 0 2 0 1 0 0 0])
  ("winners" .
   [0 0 0 1 0 0 0])
  ("announce-winner" .
   [0 0 0 3 0 1 0 0 0 0 0 0 0 0 0])
  ("best" .
   [1 0 0 0])
  ("not" .
   [14 0 0])
  ("totals" .
   [1 0 0 1 0 0])
  ("mapcar" .
   [15 0 0 0 0 2])
  ("tally" .
   [2 0 0 0 0])
  ("lambda" .
   [25 0 0 0 1 3])
  ("across" .
   [1 0 0 0 0 0])
  ("action" .
   [3 0 0 0 0 0])
  ("move" .
   [16 0 0 0])
  ("do" .
   [13 0])
  ("in" .
   [30 0])
  ("caddr" .
   [12 0 0 0 0])
  ("moves" .
   [3 0 0 0 0])
  ("princ" .
   [26 0 0 2 1])
  ("handle-human" .
   [0 0 0 1 1 1 0 0 0 1 0 0])
  ("draw-board" .
   [0 0 0 0 1 0 0 0 0 0])
  ("player-letter" .
   [2 0 2 0 0 0 1 0 0 0 0 0 0])
  ("format" .
   [47 0 0 0 0 1])
  ("fresh-line" .
   [2 0 0 0 0 1 2 0 1 0])
  ("print-info" .
   [2 0 0 0 0 0 0 1 0 0])
  ("cadr" .
   [28 0 0 0])
  ("play-vs-human" .
   [1 0 0 0 0 0 0 1 0 0 2 0 0])
  ("if" .
   [52 1])
  ("tree" .
   [46 0 0 0])
  ("print" .
   [15 0 0 0 0])
  ("cdr" .
   [34 0 0])
  ("cons" .
   [19 0 0 0])
  ("*max-dice*" .
   [0 0 0 0 1 0 0 0 0 0])
  ("cur-dice" .
   [2 0 0 0 0 0 0 0])
  ("and" .
   [14 0 0])
  ("car" .
   [46 0 0])
  ("cur-player" .
   [0 0 0 0 0 2 1 5 1 0])
  ("let" .
   [65 0 0])
  ("zerop" .
   [6 0 0 0 0])
  ("nil" .
   [57 0 0])
  ("NEIGHTBORS" .
   [0 0 2 1 0 0 0 0 0 0])
  ("defun" .
   [128 0 1 1 1])
  ("board-attack" .
   [1 0 0 0 0 0 0 0 0 1 0 0])
  ("board" .
   [16 0 0 4 4])
  ("player" .
   [15 0 0 0 0 0])
  ("src" .
   [10 0 1])
  ("dst" .
   [10 0 0])
  ("dice" .
   [12 0 0 1])
  ("board-array" .
   [0 0 0 0 0 0 0 0 0 2 0])
  ("loop" .
   [19 0 0 1])
  ("for" .
   [22 0 0])
  ("pos" .
   [21 0 0])
  ("hex" .
   [4 0 0])
  ("collect" .
   [6 0 0 0 0 0 0])
  ("eq" .
   [12 0])
  ("list" .
   [45 0 0 0])
  ("1-" .
   [7 0])
  ("FOR" .
   [1 0 0])
  ("DEFUN" .
   [1 0 1 0 0])
  ("add-new-dice" .
   [0 0 0 0 0 0 1 0 0 0 0 0])
  ("spare-dice" .
   [2 0 0 0 1 1 0 0 0 0])
  ("labels" .
   [6 0 0 1 0 0])
  ("lst" .
   [70 0 0])
  ("cond" .
   [7 0 0 0])
  ("get-ratings" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("nth" .
   [1 0 0])
  ("apply" .
   [2 0 0 0 1])
  ("max" .
   [2 0 0])
  ("ratings" .
   [2 0 0 1 1 0 0])
  ("null" .
   [4 0 0 0])
  ("p" .
   [1])
  ("play-vs-computer" .
   [1 0 0 0 0 0 0 0 0 0 1 2 0 0 0 0])
  ("handle-computer" .
   [0 0 0 0 0 0 0 0 0 0 3 0 0 0 0])
  ("PLAY-VS-COMPUTER" .
   [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0])
  ("funcall" .
   [15 0 0 0 1 1 0])
  ("lazy-mapcar" .
   [2 0 0 0 0 0 0 0 2 0 0])
  ("fun" .
   [8 0 0])
  ("lst-cur" .
   [3 0 0 0 1 0 0])
  ("lazy-mapcan" .
   [2 0 0 0 0 0 0 0 0 0 0])
  ("lazy-find-if" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("lazy-nth" .
   [3 0 0 0 0 0 0 0])
  ("load" .
   [11 0 0 0])
  ("lazy-nil" .
   [5 0 0 0 0 0 0 0])
  ("depth" .
   [4 0 0 1 0])
  ("limit-tree-depth" .
   [0 0 0 0 0 0 0 0 1 1 0 0 1 0 0 0])
  ("score-board" .
   [0 0 0 1 0 0 0 0 0 0 0])
  ("e:/program/lisp/land/DiceDoomV2.lisp" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("CL-USER>" .
   [1 0 0 0 0 0 0 0])
  ("println" .
   [0 0 1 0 0 0 0])
  ("vec" .
   [1 0 0])
  ("end" .
   [15 0 4])
  ("()" .
   [0 9])
  ("map" .
   [2 0 0])
  ("|---+-----+-----+-----+-----------+--------------|" .
   [0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("var" .
   [13 0 0])
  ("function" .
   [0 0 0 3 3 0 2 2])
  ("return" .
   [5 0 0 3 2 4])
  ("increment" .
   [0 0 0 0 1 1 0 0 0])
  ("mapper" .
   [0 0 0 0 1 0])
  ("incrementer" .
   [0 0 0 0 0 0 1 0 0 0 0])
  ("Array" .
   [1 0 0 0 0])
  ("prototype" .
   [0 0 0 0 0 1 0 0 0])
  ("arguments" .
   [1 0 0 0 0 0 0 1 0])
  ("key" .
   [7 0 0])
  ("cache" .
   [1 0 0 0 2])
  ("memorize" .
   [0 0 0 0 0 1 0 0])
  ("gcd" .
   [1 0 0])
  ("gcdmemo" .
   [0 0 0 0 0 1 0])
  ("call" .
   [1 0 1 0])
  ("template" .
   [0 0 0 0 0 0 1 0])
  ("class" .
   [0 0 0 1 0])
  ("void" .
   [0 0 0 1])
  ("operator" .
   [0 0 1 0 0 1 0 3])
  ("x" .
   [10])
  ("const" .
   [0 0 0 0 1])
  ("cout" .
   [34 0 0 1])
  ("xor" .
   [1 1 0])
  ("main" .
   [6 0 0 0])
  ("ia" .
   [11 0])
  ("iv1" .
   [10 0 0])
  ("begin" .
   [4 0 2 2 8])
  ("iv2" .
   [2 0 0])
  ("cin" .
   [1 0 0])
  ("as" .
   [5 0])
  ("iterator" .
   [2 0 0 0 0 1 1 0])
  ("it1" .
   [1 0 0])
  ("equal" .
   [2 0 0 0 0])
  ("s" .
   [4])
  ("h" .
   [1])
  ("string" .
   [11 0 0 1 1 2])
  ("a" .
   [24])
  ("ite1" .
   [1 0 0 0])
  ("ite2" .
   [1 0 0 0])
  ("endl" .
   [23 0 1 0])
  ("deque" .
   [2 0 0 0 1])
  ("(Hidden)" .
   [0 0 0 0 0 0 0 2])
  ("first" .
   [8 0 0 0 4])
  ("f" .
   [4])
  ("last" .
   [11 0 0 2])
  ("result" .
   [6 0 0 0 1 0])
  ("Foo" .
   [0 0 1])
  ("::" .
   [0 2])
  ("even" .
   [0 1 0 0])
  ("(basic_ostream<_CharT, _Traits> &__os)" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("middle" .
   [2 0 0 0 2 0])
  ("m" .
   [1])
  ("id" .
   [1 0])
  ("path" .
   [12 0 0 0])
  ("tag" .
   [11 0 0])
  ("chosen" .
   [3 0 0 0 4 1])
  ("params" .
   [0 0 0 1 2 0])
  ("when" .
   [13 0 0 0])
  ("*cur-game-tree*" .
   [0 0 0 0 3 5 1 2 0 0 0 0 0 0 0])
  ("br" .
   [1 0])
  ("*from-tile*" .
   [0 0 0 0 0 1 0 0 1 0 0])
  ("web-initialize" .
   [0 0 0 0 0 1 0 0 0 0 0 0 0 0])
  ("web-announce-winner" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0])
  (">" .
   [4])
  ("web-handle-human" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0])
  ("href" .
   [1 0 0 0])
  ("make-game-link" .
   [0 0 0 0 0 1 0 0 0 0 0 0 0 0])
  ("HELLO-REQUEST-HANDLER" .
   [0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("e:/program/lisp/land/webserver.lisp" .
   [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0])
  ("start-server" .
   [0 0 0 0 1 0 0 1 0 0 0 0])
  ("e:/program/lisp/land/sockets.lisp" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0])
  ("ql:quickload" .
   [1 0 0 3 1 2 9 0 0 0 0 0])
  ("hunchentoot" .
   [1 0 0 1 0 1 0 0 0 0 4])
  ("MYSERVER" .
   [0 0 0 1 0 1 0 0])
  ("hunchentoot:easy-acceptor" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0])
  ("eql" .
   [18 0 0])
  ("xxx" .
   [2 0 0])
  ("abc" .
   [6 0 0])
  ("def" .
   [1 0 0])
  ("sdb" .
   [1 0 0])
  ("*die-colors*" .
   [0 0 0 0 0 1 0 0 0 0 0 0])
  ("aref" .
   [12 0 0 0])
  ("game-tree" .
   [1 0 0 0 0 0 1 0 0])
  ("+" .
   [3])
  ("below" .
   [2 0 0 0 1])
  ("*board-size*" .
   [0 0 0 0 0 0 0 0 0 0 1 0])
  ("*ai-level*" .
   [0 0 0 0 0 0 1 0 0 0])
  ("pick-change-branch" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("*dice-scale*" .
   [0 0 0 0 0 1 0 0 0 0 0 0])
  ("1.0" .
   [1 0 0])
  ("0.45" .
   [1 0 0 0])
  ("0.46" .
   [1 0 0 0])
  ("let*" .
   [4 0 0 0])
  ("*dice-odds*" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("-" .
   [1])
  ("odds" .
   [2 0 0 0])
  ("-1" .
   [4 0])
  ("rate-position" .
   [0 0 0 0 0 0 0 1 1 0 0 0 0])
  ("*FROM-TILE*" .
   [0 3 0 0 0 0 0 0 0 0 0])
  ("*CUR-GAME-TREE*" .
   [0 0 0 0 3 0 0 0 0 0 0 0 0 0 0])
  ("DRAW-DOD-PAGE" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0])
  ("DOD-HANDLER" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("DOD-REQUEST-HANDLER" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2])
  ("game.html" .
   [3 0 0 0 0 0 0 0 0])
  ("then" .
   [3 0 0 0])
  ("check" .
   [8 0 0 0 0])
  ("forms" .
   [5 0 0 0 0])
  ("report-result" .
   [0 0 0 0 0 0 0 0 0 2 0 0 0])
  ("macroexpand-1" .
   [0 0 0 2 2 2 1 1 0 0 0 0 0])
  ("&rest" .
   [14 0 0 0 0])
  ("names" .
   [1 0 0 0 0])
  ("with-gensyms" .
   [0 0 0 0 0 0 0 0 2 1 1 0])
  ("combine-results" .
   [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0])
  ("test-arithmetic" .
   [0 0 0 0 0 0 0 3 1 0 0 0 0 0 0])
  ("*test-name*" .
   [0 0 0 0 0 3 1 0 1 0 0])
  ("-3" .
   [2 0])
  ("-4" .
   [2 0])
  ("test-*" .
   [5 0 0 0 0 0])
  ("name" .
   [49 0 0 3])
  ("parameters" .
   [0 0 0 0 1 0 0 0 0 0])
  ("deftest" .
   [2 0 0 0 0 1 0])
  ("TEST-+" .
   [1 0 0 0 0 0])
  ("TEST-" .
   [0 0 0 0 1])
  ("append" .
   [2 0 0 0 0 0])
  ("test-" .
   [0 0 0 0 1])
  ("*read-base*" .
   [0 0 0 0 0 1 0 0 0 0 0])
  ("rem" .
   [3 0 0])
  ("mod" .
   [3 0 0])
  ("truncate" .
   [2 0 0 0 0 0 0 0])
  ("floor" .
   [3 0 0 0 0])
  ("mode" .
   [1 0 0 0])
  ("incf" .
   [10 0 1 0])
  ("/=" .
   [3 0])
  ("<=" .
   [1 0])
  ("plusp" .
   [1 0 0 0 0])
  ("minusp" .
   [1 0 0 0 1 0])
  ("string=" .
   [2 0 0 0 0 0 0])
  ("string/=" .
   [2 0 0 0 0 0 0 0])
  ("string<" .
   [3 0 0 0 0 0 0])
  ("string>" .
   [1 0 0 0 0 0 0])
  ("string<=" .
   [1 0 0 0 0 0 0 0])
  ("dddd" .
   [1 0 0 0])
  ("foobar" .
   [1 0 0 0 0 0])
  (":start1" .
   [1 0 0 0 0 0 0])
  (":start2" .
   [1 0 0 0 0 0 0])
  ("length" .
   [4 0 0 1 7 0])
  ("elt" .
   [5 0 0])
  ("char" .
   [2 0 0 0])
  ("hash-table" .
   [1 0 0 0 1 0 0 0 0 0])
  ("multiple-value-bind" .
   [1 0 0 5 0 4 1 0 0 0 0 0 0 0 0 0 0 1 0])
  ("gethash" .
   [14 0 0 1 0 16 4])
  ("present" .
   [2 0 0 0 0 0 0])
  ("show-value" .
   [2 0 0 0 0 0 0 0 0 0])
  ("*h*" .
   [4 0 0])
  ("remhash" .
   [1 0 0 0 1 0 0])
  ("directory" .
   [2 0 1 0 0 3 0 2 2])
  ("ensure-directories-exist" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("e:/study/" .
   [1 0 0 0 0 1 0 0 0])
  ("file-author" .
   [0 0 0 0 0 0 0 1 0 0 0])
  ("with-open-file" .
   [0 0 0 0 0 0 0 3 1 1 0 0 1 0])
  ("e:/study/book/Activiti" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0])
  ("Action.pdf" .
   [0 0 0 0 1 0 0 0 0 0])
  (":element-type" .
   [0 0 0 0 2 0 0 0 0 0 0 1 0])
  ("unsigned" .
   [0 0 0 0 0 0 0 1])
  ("unsigned-byte" .
   [0 0 0 0 0 0 0 0 0 0 0 2 1])
  ("file-length" .
   [0 0 0 0 0 0 0 1 1 0 0])
  ("make-string-input-stream" .
   [0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0])
  ("unwind-protect" .
   [0 0 0 0 0 0 0 0 0 0 1 0 0 0])
  ("read" .
   [6 0 0 0])
  ("with-input-from-string" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0])
  ("with-output-to-string" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("defclass" .
   [11 0 0 0 0 1 4 1])
  ("bank-account" .
   [0 0 0 0 0 2 6 2 4 0 0 0])
  ("balance" .
   [2 0 2 2 3 4 1])
  ("print-object" .
   [0 0 0 0 0 0 0 1 0 3 0 0])
  ("slot-value" .
   [0 0 0 0 0 0 0 6 5 1])
  ("*account*" .
   [0 0 0 0 8 0 0 0 0])
  ("customer-name" .
   [0 0 0 6 1 4 0 0 0 0 0 4 1])
  (":initarg" .
   [2 0 0 0 0 0 7 7])
  (":custom" .
   [0 0 0 0 0 0 2])
  (":initform" .
   [3 0 0 0 0 0 0 5 5])
  (":balance" .
   [2 0 0 0 0 0 1 0])
  (":customer-name" .
   [1 0 0 0 0 0 0 0 0 0 0 0 2 0])
  ("*account-numbers*" .
   [0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0])
  ("defgeneric" .
   [1 0 0 0 0 0 0 2 1 1])
  ("account" .
   [6 0 0 2 0 0 0])
  ("defmethod" .
   [4 0 0 0 0 1 0 11 5])
  (":accessor" .
   [0 0 0 0 0 1 3 1 0])
  (":documentation" .
   [0 0 0 0 0 1 5 0 0 0 0 0 0 0])
  (":reader" .
   [5 0 0 0 0 2 2])
  ("account-number" .
   [0 0 0 0 0 0 0 0 0 0 0 1 0 1])
  ("account-type" .
   [0 0 0 0 0 0 0 0 0 1 0 0])
  ("find-symbol" .
   [0 0 0 0 0 0 0 0 4 0 0])
  (":foo" .
   [5 0 0 0])
  ("symbol-name" .
   [1 0 0 0 0 0 0 0 0 2 0])
  ("vector-push-extend" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0])
  ("filename" .
   [1 0 0 0 2 0 1 1])
  ("corpus" .
   [6 0 0 0 4 2])
  ("make-array" .
   [0 0 0 0 0 0 0 0 2 0])
  (":adjustable" .
   [0 0 0 0 0 2 0 0 0 0 0])
  (":fill-pointer" .
   [0 0 0 0 0 0 0 0 2 0 0 0 0])
  ("dir" .
   [1 0 0])
  ("add-file-to-corpus" .
   [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0])
  ("ADD-DIRECTORY-TO-CURPUS" .
   [0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("*corpus*" .
   [0 0 0 0 2 3 0 0])
  ("clear-database" .
   [0 0 0 1 0 0 0 0 0 0 0 0 0 0])
  ("size" .
   [3 0 0 1])
  ("testing-fraction" .
   [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("shuffle" .
   [0 0 0 0 0 1 0])
  (":start" .
   [2 0 0 0 1 1])
  (":end" .
   [1 0 0 0])
  ("train-on" .
   [1 0 0 0 1 0 0 0])
  ("shuffled" .
   [1 0 0 1 0 0 0 0])
  ("train-from-corpus" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0])
  ("start" .
   [5 0 0 0 1])
  ("destructuring-bind" .
   [0 0 0 0 2 0 1 0 1 0 0 0 0 0 0 0 0 0])
  ("idx" .
   [7 0 0])
  ("train" .
   [1 0 0 0 0])
  ("file" .
   [4 0 0 0])
  ("*max-chars*" .
   [0 0 0 0 0 0 0 2 0 0 0])
  ("test-from-corpus" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0])
  ("classification" .
   [0 0 0 0 0 0 0 0 1 1 0 0 0 0])
  ("score" .
   [2 0 0 0 0])
  ("classif" .
   [0 0 0 0 0 0 1])
  ("classify" .
   [1 0 0 0 0 0 0 0])
  ("start-of-file" .
   [0 0 0 0 0 0 0 0 0 0 0 2 0])
  (":file" .
   [1 0 0 0 0])
  (":classif" .
   [0 0 0 0 0 0 0 1])
  (":classification" .
   [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0])
  ("random" .
   [2 0 0 0 0 1])
  ("other" .
   [1 0 0 0 1])
  ("rotatef" .
   [1 0 0 0 0 0 0])
  ("shuffle-vector" .
   [0 0 0 0 0 1 0 0 0 0 0 0 0 0])
  ("nshuffle-vector" .
   [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0])
  ("copy-seq" .
   [1 0 0 0 0 0 0 0])
  ("min" .
   [1 0 0])
  ("max-chars" .
   [0 0 0 0 0 0 0 1 0])
  ("make-string" .
   [0 0 0 0 0 0 0 0 1 0 0])
  ("read-sequence" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0])
  ("subseq" .
   [2 0 0 0 0 0])
  ("intern" .
   [2 0 0 0 0 0])
  ("sym" .
   [4 0 0])
  (":keyword" .
   [0 0 0 0 0 0 1 1])
  ("spec" .
   [9 0 0 0])
  ("as-keyword" .
   [0 0 0 0 0 0 3 0 0 0])
  ("slot->defclass-slot" .
   [0 0 0 0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 0])
  ("major-version" .
   [0 0 0 0 0 3 0 2 0 1 0 0 0])
  ("u1" .
   [7 0])
  ("define-binary-class" .
   [0 0 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 0])
  ("slots" .
   [2 0 0 4 1])
  ("read-value" .
   [0 0 0 0 0 0 0 11 1 0])
  ("iso-8859-1-string" .
   [0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("id3-tag" .
   [0 0 0 0 0 0 1])
  ("identifier" .
   [0 0 0 0 0 0 0 0 2 0])
  ("revision" .
   [0 0 0 0 0 0 2 0])
  ("flags" .
   [1 0 0 1 0])
  ("frame" .
   [0 0 0 0 1])
  (":length" .
   [0 0 0 0 0 1 0])
  ("frames" .
   [0 0 0 0 1 0])
  ("id3-frames" .
   [0 0 0 0 0 0 0 1 0 0])
  (":tag-size" .
   [0 0 0 0 0 0 0 1 0])
  ("size-t" .
   [0 0 0 0 1 0])
  ("second" .
   [1 0 0 0 1 1])
  ("mklist" .
   [0 0 0 0 0 1])
  ("listp" .
   [1 0 0 0 0])
  ("normalize-slot-spec" .
   [0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("arg" .
   [1 0 0])
  ("slot->read-value" .
   [0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0])
  ("typevar" .
   [2 0 0 0 0 0 1])
  ("streamvar" .
   [0 0 0 0 0 0 0 0 4])
  ("objectvar" .
   [0 0 0 0 0 0 0 1 4])
  ("args" .
   [7 0 1 1])
  ("write-value" .
   [0 0 0 0 0 0 0 0 1 0 0])
  ("typep" .
   [0 0 0 0 1])
  ("ql:system-apropos" .
   [0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0])
  ("aserve" .
   [2 0 0 0 0 0])
  ("ql:where-is-system" .
   [0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0])
  ("cl-ppcre" .
   [1 0 0 0 0 0 0 0])
  ("ql:register-local-projects" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("portableaserve" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("asdf:asdf-version" .
   [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0])
  (":asdf-user" .
   [0 0 0 0 0 0 0 1 0 0])
  (":cl-user" .
   [0 0 0 0 0 0 1 0])
  (":cl-ppcre" .
   [0 0 0 0 0 0 0 1 0])
  ("dg:start-server" .
   [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0])
  ("require" .
   [0 0 0 0 1 0 0])
  (":duang" .
   [0 0 0 0 1 0])
  ("duang" .
   [0 0 0 1 0])
  ("str" .
   [9 0 0])
  ("position-if" .
   [2 0 0 0 0 0 0 0 0 0 0])
  ("tokens" .
   [3 0 0 1 2 1])
  ("graphic-char-p" .
   [0 0 0 1 0 0 0 0 0 0 0 0 0 0])
  ("char=" .
   [1 0 0 0 0])
  ("alpha-char-p" .
   [0 0 0 0 0 0 0 1 0 0 0 0])
  ("constituent" .
   [0 0 0 0 0 0 1 0 1 0 0])
  ("parse-integer" .
   [0 0 0 0 0 0 0 0 0 1 1 0 0])
  ("toks" .
   [2 0 0 0])
  ("third" .
   [0 0 0 1 0])
  ("defconstant" .
   [0 0 0 0 0 0 0 1 0 4 0])
  ("parse-month" .
   [0 0 0 0 0 0 0 0 0 1 0])
  ("position" .
   [0 0 0 0 1 0 0 0])
  ("month-names" .
   [0 0 0 0 0 0 1 0 0 0 0])
  ("string-equal" .
   [0 0 0 0 0 0 0 0 0 0 1 0])
  ("parse-date" .
   [0 0 0 0 0 0 0 0 1 0])
  ("primo" .
   [1 0 0 0 0])
  ("documentation" .
   [0 0 0 0 1 1 0 0 0 0 0 0 0])
  (":x" .
   [3 0])
  ("make-point" .
   [0 0 0 0 0 0 0 0 2 0])
  (":y" .
   [2 0])
  (":z" .
   [2 0])
  (":direction" .
   [0 0 0 0 0 0 2 1 0 1])
  (":output" .
   [1 0 0 0 0 1 1])
  ("res" .
   [5 0 0])
  ("inc" .
   [4 0 0])
  ("color-at" .
   [1 0 0 0 0 0 0 0])
  ("unit-vector" .
   [0 0 0 0 0 0 0 1 1 0 0])
  ("eye" .
   [4 0 0])
  ("round" .
   [1 0 0 0 0])
  ("sendray" .
   [0 0 0 0 0 0 1])
  ("int" .
   [3 0 0])
  ("first-hit" .
   [1 0 0 0 0 0 0 0 0])
  ("surface" .
   [2 0 0 0 1 2 0])
  ("*world*" .
   [0 0 0 0 3 0 0])
  ("distance" .
   [1 0 0 0 0 0 0 0])
  ("dist" .
   [3 0 0 0])
  ("hit" .
   [2 0 0])
  ("values" .
   [6 0 0 2 0 0])
  ("lambert" .
   [1 0 0 0 0 0 0])
  ("multiple-value-" .
   [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0])
  ("defstruct" .
   [0 0 0 0 0 0 0 3 1])
  (":include" .
   [0 0 0 0 1 0 0 0])
  (":color" .
   [1 0 0 0 0 0])
  ("intersect" .
   [1 0 0 0 0 0 0 0 0])
  ("typecase" .
   [2 0 0 0 0 0 0 0])
  ("sphere" .
   [1 0 0 0 1 2])
  ("sphere-intersect" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0])
  ("minroot" .
   [1 0 0 0 0 0 0])
  ("sq" .
   [3 0])
  ("normal" .
   [1 0 0 0 0 0])
  ("sphere-center" .
   [0 0 0 0 0 0 0 0 0 0 1 0 0])
  ("defsphere" .
   [0 0 0 0 0 0 0 2 0])
  ("-1200" .
   [1 0 0 0 0])
  ("tracer" .
   [1 0 0 0 0 0])
  ("ray-test" .
   [0 0 0 0 1 0 0 0])
  ("cah" .
   [1 0 0])
  ("incf1" .
   [1 0 0 0 0])
  ("append1f" .
   [1 0 0 0 0 0 0 0])
  ("gstop" .
   [0 0 0 2 0])
  ("stop" .
   [0 0 0 1])
  ("insym" .
   [1 0 0 0 1])
  ("c" .
   [1])
  ("choices" .
   [0 0 0 0 1 0 0])
  ("case" .
   [2 0 0 0])
  ("expr" .
   [11 0 0 0])
  ("exprs" .
   [1 0 0 0 0])
  ("syms" .
   [1 0 0 0])
  (":g1" .
   [1 0 0])
  ("avg" .
   [1 0 0])
  ("aif" .
   [1 0 0])
  ("it" .
   [1 0])
  ("speaker" .
   [3 0 0 0 0 0 1])
  ("speak" .
   [6 0 0 0 0])
  (":before" .
   [1 0 0 0 0 0 0])
  (":after" .
   [1 0 0 0 0 0])
  ("intellectual" .
   [0 0 0 0 0 0 0 2 0 0 0 0])
  ("hungry" .
   [1 0 0 0 0 0])
  (":around" .
   [1 0 0 0 0 0 0])
  ("courtier" .
   [1 0 0 0 0 0 0 0])
  ("next-method-p" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("call-next-method" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0])
  ("kings" .
   [1 0 0 0 0])
  ("will" .
   [1 0 0 0])
  ("pop" .
   [3 0 0])
  ("make-queue" .
   [0 0 0 0 0 0 0 0 1 0])
  ("enqueue" .
   [0 0 0 0 3 1 0])
  ("q1" .
   [8 0])
  ("dequeue" .
   [0 0 0 0 2 0 0])
  (":input" .
   [0 0 0 0 1 0])
  ("fixnum" .
   [0 0 0 0 0 1])
  ("copy-file" .
   [0 0 0 0 0 0 0 1 0])
  ("*package*" .
   [0 0 0 0 1 1 0 0 0])
  ("find-package" .
   [0 0 0 0 0 0 0 0 1 1 0 0])
  ("COMMON-LISP-USER" .
   [0 0 0 0 0 0 0 0 0 1 0 0 1 0 1 1])
  ("symbol-package" .
   [0 0 0 0 0 0 0 0 0 0 0 1 0 0])
  ("make-package" .
   [0 0 0 0 0 0 0 0 0 0 1 0])
  ("mine" .
   [2 0 0 0])
  ("import" .
   [1 0 0 0 1 0])
  ("common-lisp:base-" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0])
  ("COMMON-LISP-USER:bar" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("child" .
   [6 0 0 0 1])
  ("prove-simple" .
   [0 0 0 0 0 0 0 0 0 0 1 0])
  ("prove" .
   [6 0 0 0 0])
  ("pred" .
   [1 0 0 0])
  ("change-vars" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("sublis" .
   [2 0 0 0 0 0])
  ("vars-in" .
   [3 0 0 0 0 0 1])
  ("atom" .
   [1 0 0 0])
  ("union" .
   [1 0 0 0 0])
  ("content" .
   [0 0 0 0 0 1 0])
  ("div" .
   [3 0 0])
  ("with" .
   [4 0 0 0])
  ("lambda-list-keywords" .
   [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("dotimes" .
   [0 0 0 0 0 1 0])
  ("terpri" .
   [1 0 0 0 0 0])
  ("brs" .
   [3 0 0])
  ("base" .
   [1 0 0 0])
  ("html-file" .
   [0 0 0 0 0 0 0 1 0])
  (":if-exists" .
   [0 0 0 0 0 0 1 0 0 0])
  ("title" .
   [7 0 0 1 0])
  ("string-upcase" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0])
  ("gobj" .
   [1 0 0 0])
  ("parms" .
   [1 0 0 0 0])
  ("get-next" .
   [2 0 0 0 0 0 1 0])
  ("some" .
   [2 0 0 0])
  ("defmeth" .
   [1 0 0 0 0 0 0])
  (":parents" .
   [1 0 0 0 0 2 0 0])
  ("prec" .
   [5 0 0 0])))
